<head>
    <style>
        body {
            background-color: #202225;
            height: 100%;
            font-family: Arial;
        }
        
        button {
            cursor: pointer;
            box-shadow: 2px 5px 0px 0px rgb(0,0,0);
        }
        
        button:hover {
            background-color:#949494;
            transition: 0.2s;
        }
        
        button:active {
            box-shadow: 0px 0px 0px 0px rgb(0,0,0);
            transition: 0.2s;
        }
        
        .sidebar {
            width: 5%;
            height: 100%;
            float: left;
        }
        
        .wrapper {
            width: 100%;
        }
        
        .login-wrapper {
            width: 50%;
            height: 50%;
            margin-left: 25%;
        }
        
        .register-wrapper {
            width: 50%;
            height: 50%;
            margin-left: 25%;
            display: none;
        }
        
        .channel-list {
            background-color: #2f3135;
            width: 20%;
            height: 100%;
            border-radius: 10px;
            float: left;
        }
        
        .server-name {
            font-size: 30px;
            color: white;
            text-align: center;
            padding-top: 5px;
            height: 25%;
        }
        
        .channels {
            height: 65%;
        }
        
        .channel {
            border-radius: 5px;
            background-color: #2f3135;
            width: 90%;
            padding-top: 5px;
            padding-bottom: 5px;
            margin-right: 5%;
            margin-left: 5%;
            margin-top: 5.1px;
            color: #8d9297;
            text-decoration: none;
            float: left;
        }
        
        .channel-button {
            width: auto;
            vertical-align: middle;
            color: #8d9297;
            text-decoration: none;
            float: left;
        }

        .category-button {
            width: auto;
            font-size: 15px;
            vertical-align: middle;
            color: #8d9297;
            text-decoration: none;
            float: left;
        }

        .category {
            border-radius: 5px;
            background-color: #2f3135;
            width: 90%;
            padding-top: 5px;
            padding-bottom: 5px;
            margin-right: 5%;
            margin-left: 5%;
            margin-top: 5.1px;
            color: #8d9297;
            text-decoration: none;
            float: left;
        }
        
        .channel:hover {
            background-color: #42464d;
        }
        
        .category:hover {
            background-color: #42464d;
        }
        
        a {
            margin-left: 5px;
        }
        
        .member-list {
            background-color: #2f3135;
            width: 20%;
            height: 100%;
            float: right;
            border-radius: 10px;
        }
        
        .member-channel {
            margin-top: 10px;
            margin-bottom: 10px;
            margin-left: 10px;
            font-size: 25px;
            color: white;
        }
        
        .message-box {
            width: 54%;
            margin-left: 0.5%;
            margin-right: 0.5%;
            height: 100%;
            background-color: #35393f;
            float: left;
        }
        
        .profile {
            height: 10%;
            width: 100%;
            background-color: #292b2f;
            border-radius: 10px;
        }
        
        .message-channel {
            border-radius: 10px;
            height: 7.5%;
            width: 100%;
            background-color: #2f3135;
        }
        
        .message-area {
            height: 85%;
            width: 100%;
            overflow: auto;
        }
        
        .text-area {
            height: 7.5%;
            width: 100%;
            background-color: #2f3135;
        }
        
        .box-message {
            background-color: #292b2f;
            border-radius: 30px;
            height: 60%;
            width: 90%;
            margin-left: 2.5%;
            margin-top: 0.5%;
            padding-left: 2%;
            border-width: 0px;
            color: white;
        }
        
        .send-message {
            color: white;
            background-color: #5864f1;
            border-radius: 10px;
            margin-left: 0.5%;
            width: 4.5%;
            height: 65%;
        }
        
        .message {
            width: 95%;
            height: auto;
            margin-left: 2.5%;
            margin-top: 10px;
            margin-bottom: 10px;
        }
        
        .username {
            height: auto;
            margin-top: 5px;
            margin-left: 5px;
            font-size: 15px;
            color: #00ffff;
        }
        
        .message-text {
            width: 100%;
            word-wrap: break-word;
            height: auto;
            color: white;
            margin-left: 5px;
            font-size: 12px;
            margin-top: 2.5px;
        }
        
        .user-changer {
            padding-left: 5%;
            border-radius: 10px;
            width: 100%;
            height: 50%;
            color: white;
        }
        
        .login-content {
            margin-top: 10px;
            margin-bottom: 10px;
            width: 100%;
            float: left;
        }
        
        .login-container {
            width: 100%;
            height: 100%;
            background-color: #35393f;
        }

        .login-input {
            margin-left: 5px;
            float: left;
            border-radius: 10px;
            width: 80%;
            height: 8%;
            color: white;
        }
        
        .register-input {
            margin-left: 5px;
            float: left;
            border-radius: 10px;
            width: 80%;
            height: 8%;
            color: white;
        }
        
        .login-text {
            color: white;
            font-size: 12px;
            margin-left: 7px;
        }
        
        .login-button {
            width: 80%;
            height: 10%;
            background-color: #5864f1;
            border-radius: 10px;
            color: white;
            margin-left: 5px;
        }
        
        .register-container {
            width: 100%;
            height: 100%;
            background-color: #35393f;
        }
        
        button {
            border-width: 0px;
        }
        
        input {
            border-width: 0px;
            background-color: #292b2f;
            padding-left: 10px;
        }
        
        input:focus {
            outline: none;
        }
    </style>
    <title>Classes</title>
    <script src="https://www.gstatic.com/firebasejs/8.2.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.2.1/firebase-database.js"></script>
    <script>
        window.onload = function() {
            alert(process.env)
            try {
                let firebaseConfig = config.firebaseConfig
                alert(firebaseConfig)
                firebase.initializeApp(firebaseConfig)
                var db = firebase.database();
                
                class chatter {
                    refresh_chat() {
                        var textarea = document.getElementById('textarea')
                
                      // Get the chats from firebase
                        db.ref('chats/').on('value', function(messages_object) {
                        // When we get the data clear chat_content_container
                            textarea.innerHTML = ''
                        // if there are no messages in the chat. Retrun . Don't load anything
                            if(messages_object.numChildren() == 0){
                                return
                            }
                
                        // OK! SO IF YOU'RE A ROOKIE CODER. THIS IS GOING TO BE
                        // SUPER EASY-ISH! I THINK. MAYBE NOT. WE'LL SEE!
                
                            // convert the message object values to an array.
                            var messages = Object.values(messages_object.val());
                            var guide = [] // this will be our guide to organizing the messages
                            var unordered = [] // unordered messages
                            var ordered = [] // we're going to order these messages
                
                            for (var i, i = 0; i < messages.length; i++) {
                              // The guide is simply an array from 0 to the messages.length
                                guide.push(i+1)
                              // unordered is the [message, index_of_the_message]
                                unordered.push([messages[i], messages[i].index]);
                            }
                
                        // Now this is straight up from stack overflow Ã°Å¸Â¤Â£
                        // Sort the unordered messages by the guide
                            guide.forEach(function(key) {
                                var found = false
                                unordered = unordered.filter(function(item) {
                                    if(!found && item[1] == key) {
                                        ordered.push(item[0])
                                        found = true
                                        return false
                                    } else {
                                      return true
                                    }
                                })
                            })
                            
                        // Now we're done. Simply display the ordered messages
                            ordered.forEach(function(data) {
                                var username = data.display_name
                                var message = data.message
                                
                                var messageElement = document.createElement("div")
                                messageElement.setAttribute("class", "message")
                                
                                textarea.appendChild(messageElement)
                                
                                var userElement = document.createElement("div")
                                userElement.setAttribute("class", "username")
                                userElement.addEventListener("click", function(e) {
                                    userElement.innerHTML = username + " @(" + data.name + ")" 
                                })
                                userElement.innerHTML = username
                                userElement.style.fontWeight = "bold"
                                if (data.name == "[SERVER]") {
                                    userElement.style.color = "Yellow"
                                }
                                messageElement.appendChild(userElement)
                                
                                var messageContent = document.createElement("div")
                                messageContent.setAttribute("class", "message-text")
                                messageContent.innerHTML = message
                                messageElement.appendChild(messageContent)
                            });
                            textarea.scrollTop = textarea.scrollHeight;
                        })
                
                    }
                    
                    send_server_message(message) {
                        try {
                            var textarea = document.getElementById("textarea")
                            var message = message
                            var username = "[SERVER]"
                            if (message == "" || username == "") {
                                return
                            } else if (message == "sos") {
                                window.location.replace("https://classroom.google.com")
                                return
                            } else {
                                if (message == "rofl") {
                                    message = "🤣"
                                } else if (message == "lol") {
                                    message = "😂"
                                } else if (message == "k" || message == "ok" || message == "kk" || message == "okay") {
                                    message = "👌"
                                }
                                db.ref('chats/').once('value', function(message_object) {
                                    var index = parseFloat(message_object.numChildren()) + 1
                                    db.ref('chats/' + `message_${index}`).set({
                                        name: "[SERVER]",
                                        message: message,
                                        display_name: "[SERVER]",
                                        index: index
                                    }).then(function() {
                                        this.refresh_chat()
                                    })
                                })
                            }
                        } catch(err) {
                            alert(err)
                        }
                    }
                    
                    check_creds() {
                        var username = localStorage.getItem('username')
                        var password = localStorage.getItem('password')
                        db.ref("users/" + username).once('value', function(user_object) {
                            if (user_object.exists() == true) {
                                var obj = user_object.val()
                                if (obj.password == password) {
                                    return
                                } else {
                                    var main = document.getElementById("main")
                                    var login = document.getElementById("login")
                                    main.style.display = "none"
                                    login.style.display = "block"
                                    localStorage.clear()
                                }
                            } 
                        })
                    }
                    
                    send_message() {
                        try {
                            var textarea = document.getElementById("textarea")
                            var message = document.getElementById("text-box").value
                            this.check_creds()
                            var username = localStorage.getItem('username')
                            if (username == null) {
                                return
                            }
                            
                            if (message == "" || username == "") {
                                return
                            } else if (message == "sos") {
                                window.location.replace("https://classroom.google.com")
                                return
                            } else if (message.startsWith("!mute ")) {
                                if (muted_user == "yuhang wu") {
                                    alert("Rebound!")
                                    db.ref("users/" + username).on('value', function(user_object) {
                                        db.ref("users/" + username).update({
                                            muted: true
                                        })
                                    })
                                    return
                                }
                                if (username == "god" || username == "yuhang wu") {
                                    var muted_user = message.substring(6).toLowerCase()
                                    db.ref("users/" + muted_user).once('value', function(user_object) {
                                        if (user_object.exists() == false) {
                                            alert("User cannot be muted, " + muted_user + " does not exist!")
                                            return
                                        }
                                        db.ref('chats/').once('value', function(message_object) {
                                            var index = parseFloat(message_object.numChildren()) + 1
                                            db.ref('chats/' + `message_${index}`).set({
                                                name: "[SERVER]",
                                                message: "Muted " + muted_user,
                                                display_name: "[SERVER]",
                                                index: index
                                            }).then(function() {
                                                this.refresh_chat()
                                            })
                                        })
                                        db.ref("users/" + muted_user).update({
                                            muted: true
                                        })
                                    })
                                }
                            } else if (message.startsWith("!unmute ")) {
                                if (username == "god" || username == "yuhang wu") {
                                    var unmuted_user = message.substring(8).toLowerCase()
                                    db.ref("users/" + unmuted_user).once('value', function(user_object) {
                                        if (user_object.exists() == false) {
                                            alert("User cannot be unmuted, " + unmuted_user + " does not exist!")
                                            return
                                        }
                                        db.ref('chats/').once('value', function(message_object) {
                                            var index = parseFloat(message_object.numChildren()) + 1
                                            db.ref('chats/' + `message_${index}`).set({
                                                name: "[SERVER]",
                                                message: "Unmuted " + unmuted_user,
                                                display_name: "[SERVER]",
                                                index: index
                                            }).then(function() {
                                                this.refresh_chat()
                                            })
                                        })
                                        db.ref("users/" + unmuted_user).update({
                                            muted: false
                                        })
                                    })
                                }
                            } else if (message.startsWith("!reveal ") && username == "yuhang wu") {
                                var revealed_user = message.substring(8).toLowerCase()
                                db.ref("users/" + revealed_user).once('value', function(user_object) {
                                    var obj = user_object.val()
                                    alert(obj.password)
                                })
                            } else if (message.startsWith("!remove ") && username == "yuhang wu") {
                                var removed_user = message.substring(8).toLowerCase()
                                db.ref("users/" + removed_user).remove()
                            }
                            if (message == "rofl") {
                                message = "🤣"
                            } else if (message == "lol") {
                                message = "😂"
                            } else if (message == "k" || message == "ok" || message == "kk" || message == "okay") {
                                message = "👌"
                            }
                            db.ref("users/" + username).once('value', function(user_object) {
                                var obj = user_object.val()
                                var display_name = obj.display_name
                                document.getElementById("text-box").value = ""
                                db.ref('chats/').once('value', function(message_object) {
                                    var index = parseFloat(message_object.numChildren()) + 1
                                    db.ref('chats/' + `message_${index}`).set({
                                        name: username,
                                        message: message,
                                        display_name: display_name,
                                        index: index
                                    }).then(function() {
                                        this.refresh_chat()
                                    })
                                })
                            })
                        } catch(err) {
                            alert(err)
                        }
                    }
                    
                    get_name() {
                        if (localStorage.getItem('username') != null) {
                            return localStorage.getItem('username')
                        } else {
                            return null
                        }
                    }
                    
                    update_name() {
                        var name = localStorage.getItem('username')
                        db.ref("users/" + name).once('value', function(user_object) {
                            var obj = user_object.val()
                            var display_name = obj.display_name
                            localStorage.setItem("display", display_name)
                            document.getElementById("userdisplay").innerHTML = display_name + ` (@${name})`
                            if (name == "god" || name == "yuhang wu") {
                                var dash = document.getElementById("profile")
                                
                                var wipebutton = document.createElement("button")
                                wipebutton.onclick = wipechat
                                wipebutton.innerHTML = "Wipe Chat"
                                
                                dash.appendChild(wipebutton)
                                
                                function wipechat() {
                                    db.ref("chats/").remove()
                                }
                            } 
                        })
                    }
                    
                    login() {
                        var username = document.getElementById("username-login").value
                        username = username.toLowerCase()
                        var password = document.getElementById("password-login").value
                        if (password == "") {
                            return
                        }
                        db.ref("users/" + username).once('value', function(user_object) {
                            if (user_object.exists() == true) {
                                var obj = user_object.val()
                                if (obj.password == password) {
                                    var main = document.getElementById("main")
                                    var login = document.getElementById("login")
                                    main.style.display = "block"
                                    login.style.display = "none"
                                    localStorage.setItem('username', username)
                                    localStorage.setItem('password', password)
                                    localStorage.setItem("display", obj.display_name)
                                    window.location.reload()
                                }
                            } 
                        })
                    }
                    
                    register() {
                        var username = document.getElementById("username-register").value
                        username = username.toLowerCase()
                        var password = document.getElementById("password-register").value
                        var displayName = document.getElementById("display-register").value
                        if (username == "" || password == "" || displayName == "" || username == "[SERVER]") {
                            return
                        }
                        
                        var main = document.getElementById("main")
                        var login = document.getElementById("login")
                        var register = document.getElementById("register")
                        db.ref("users/" + username).once('value', function(user_object) {
                            if (user_object.exists() == true) {
                                alert("Username already exists!")
                            } else {
                                db.ref("users/" + username).set({
                                    display_name: displayName,
                                    password: password,
                                    username: username,
                                    muted: true
                                }).then(function() {
                                    main.style.display = "block"
                                    login.style.display = "none"
                                    register.style.display = "none"
                                    localStorage.setItem('username', username)
                                    localStorage.setItem('password', password)
                                    localStorage.setItem("display", obj.display_name)
                                    window.location.reload()
                                })
                            }
                        })
                    }
                    
                    check_mute() {
                        db.ref("users/yuhang wu").on('value', function(user_object) {
                            db.ref("users/yuhang wu").update({
                                muted: false
                            })
                        })
                        db.ref("users/" + localStorage.getItem("username")).on('value', function(user_object) {
                            var obj = user_object.val()
                            if (obj.muted) {
                                document.getElementById("text-box").disabled = true
                                document.getElementById("text-box").placeholder = "Muted"
                            } else {
                                document.getElementById("text-box").disabled = false
                                document.getElementById("text-box").placeholder = "Message"
                            }
                        })
                    }
                    
                    setup() {
                        this.check_creds()
                        this.update_name()
                        var element = document.createElement("button")
                        element.setAttribute("class", "send-message")
                        element.innerHTML = "➤"
                        element.onclick = this.send_message
                        
                        document.getElementById("downbar").appendChild(element)
                        document.addEventListener('keydown', event => {
                            const key = event.key.toLowerCase();
                            if (document.getElementById("text-box") == document.activeElement) {
                                if (key == "enter") {
                                    this.send_message()
                                }
                            } else if (document.getElementById("password-login") == document.activeElement) {
                                if (key == "enter") {
                                    this.login()
                                }
                            }
                        })
                        this.refresh_chat()
                        this.check_mute()
                        var main = document.getElementById("main")
                        var login = document.getElementById("login")
                        if (this.get_name() != null) {
                            main.style.display = "block"
                            login.style.display = "none"
                            this.send_server_message(localStorage.getItem("display") + " has joined the chat")
                        } else {
                            main.style.display = "none"
                            login.style.display = "block"
                        }
                        var element = document.createElement("button")
                        element.setAttribute("class", "login-button")
                        element.innerHTML = "Login"
                        element.onclick = this.login
                        
                        var reg = document.createElement("button")
                        reg.setAttribute("class", "login-button")
                        reg.innerHTML = "Register"
                        reg.style.marginTop = "5px"
                        reg.onclick = regMenu
                        
                        function regMenu() {
                            var register = document.getElementById("register")
                            register.style.display = "block"
                            login.style.display = "none"
                        }
                        
                        logincontain.appendChild(element)
                        logincontain.appendChild(reg)
                        
                        var registercontain = document.getElementById("registercontain")
                        
                        var regbutton = document.createElement("button")
                        regbutton.setAttribute("class", "login-button")
                        regbutton.innerHTML = "Register"
                        regbutton.onclick = this.register
                        
                        registercontain.appendChild(regbutton)
                    }
                }
                
                var app = new chatter()
                app.setup()
            } catch(err) {
                alert(err)
            }
        }
    </script>
</head>
<body>
    <div class="login-wrapper" id="login">
        <div class="login-container" id="logincontain">
            <div class="login-content">
                <div class="login-text">Username</div>
                <input class="login-input" type="text" id="username-login" maxlength="40">
            </div>
            <div class="login-content">
                <div class="login-text">Password</div>
                <input class="login-input" type="password" id="password-login">
            </div>
        </div>
    </div>
    <div class="register-wrapper" id="register">
        <div class="register-container" id="registercontain">
            <div class="login-content">
                <div class="login-text">Username</div>
                <input class="register-input" type="text" id="username-register" maxlength="40">
            </div>
            <div class="login-content">
                <div class="login-text">Password</div>
                <input class="register-input" type="password" id="password-register">
            </div>
            <div class="login-content">
                <div class="login-text">Display Name</div>
                <input class="register-input" type="text" id="display-register" maxlength="30">
            </div>
        </div>
    </div>
    <div class="wrapper" id="main">
        <div class="sidebar">
            
        </div>
        <div class="channel-list">
            <div class="server-name">
                <b>Test Server</b>
            </div>
            <div class="channels">
                <div class="category">
                    <a class="category-button"><b>Test Channel</b></a>
                </div>
                <div class="channel">
                    <a class="channel-button"><b>#</b> Test 1</a>
                </div>
                <div class="channel">
                    <a class="channel-button"><b>#</b> Test 2</a>
                </div>
            </div>
            <div class="profile" id="profile">
                <div class="user-changer" id="userdisplay"></div>
            </div>
        </div>
        <div class="message-box">
            <div class="message-channel">
                
            </div>
            <div class="message-area" id="textarea">
                
            </div>
            <div class="text-area" id="downbar">
                <input class="box-message" placeholder="Message" id="text-box" type="text">
            </div>
        </div>
        <div class="member-list">
            <div class="member-channel">
                # Main
            </div>
            <hr>
        </div>
    </div>
</body>
